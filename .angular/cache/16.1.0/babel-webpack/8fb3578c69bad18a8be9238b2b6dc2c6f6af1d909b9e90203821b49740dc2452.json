{"ast":null,"code":"import { RouterModule } from '@angular/router';\n// Import your custom 404 error component\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [\n// Your other routes...\n// Add the catch-all route for 404 errors\n{\n  path: '**',\n  component: NotFoundComponent\n}];\nexport class AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","NotFoundComponent","routes","path","component","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["/Users/willvanderburg/Desktop/Angular/my-first-app/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// Import your custom 404 error component\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [\n  // Your other routes...\n  \n  // Add the catch-all route for 404 errors\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AAEtD;AACA,SAASC,iBAAiB,QAAQ,iCAAiC;;;AAEnE,MAAMC,MAAM,GAAW;AACrB;AAEA;AACA;EAAEC,IAAI,EAAE,IAAI;EAAEC,SAAS,EAAEH;AAAiB,CAAE,CAC7C;AAMD,OAAM,MAAOI,gBAAgB;AAAhBA,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;QAAhBA;AAAgB;AAAhBA,gBAAgB,C;YAHjBL,YAAY,CAACM,OAAO,CAACJ,MAAM,CAAC,EAC5BF,YAAY;AAAA;;2EAEXK,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAR,YAAA;IAAAS,OAAA,GAFjBT,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}